import random
from faker import Faker

import re
import pandas as pd
from sqlalchemy.orm import Session
from sqlalchemy import create_engine, insert, inspect, Table, MetaData
from sqlalchemy_utils import create_database, database_exists


class Hash:
    def __init__(self, s: str):
        self.p, self.m, self.hash = 31, 10**9 + 7, 0
        self.compute_hashes(s)
 
    def compute_hashes(self, s: str):
        hash = 0
        for ch in s:
            value = ord(ch)
            hash = (hash * self.p + value) % self.m
        self.hash = hash
 
    def __eq__(self, other):
        return self.hash == other.hash
 
    def __str__(self):
        return f'({self.hash})'
 

def get_hash_value(s: str):
    return Hash(s).hash

def fix_cpf(cpf):
    cpf = re.sub('[.-]','', cpf)
    return cpf

def fix_rg(rg):
    rg = str(rg)
    return rg.replace('X', '0')

def insert_data(engine_db, table_name, ids_list, seed):
    # Creating connection with client database
    session_client_db = Session(engine_db)

    # Get columns of table
    client_columns_list = []
    insp = inspect(engine_db)
    columns_table = insp.get_columns(table_name)

    for c in columns_table :
        client_columns_list.append(str(c['name']))
    #print(client_columns_list)

    # Create engine, reflect existing columns, and create table object for oldTable
    # change this for your source database
    engine_db._metadata = MetaData(bind=engine_db)
    engine_db._metadata.reflect(engine_db)  # get columns from existing table
    engine_db._metadata.tables[table_name].columns = [
        i for i in engine_db._metadata.tables[table_name].columns if (i.name in client_columns_list)]
    table_client_db = Table(table_name, engine_db._metadata)

    # Create session of database
    session_db = Session(engine_db)

    # Define seed to generator
    Faker.seed(seed)
    random.seed(seed)
    faker = Faker(['pt_BR'])

    for id in ids_list:

        nome = faker.name()
        rg = fix_rg(faker.rg())
        cpf = fix_cpf(faker.cpf())
        idade = random.randint(0, 1000)
        altura = random.randint(0, 2000)
        data_de_nascimento = faker.date()
        ipv4 = faker.ipv4(),
        ipv6 = faker.ipv6()
        endereco = faker.address()
        email = faker.ascii_email()
        telefone = faker.cellphone_number()
        profissao = faker.job()

        stmt = insert(table_client_db).values(
            id = id,
            nome = nome,
            rg = rg,
            cpf = cpf,
            idade = idade,
            altura = altura,
            data_de_nascimento = data_de_nascimento,
            ipv4 = ipv4,
            ipv6 = ipv6,
            endereco = endereco,
            email = email,
            telefone = telefone,
            profissao = profissao
        )

        session_db.execute(stmt)
    
    session_db.commit()


if __name__ == '__main__':

    USER = 'root'
    DB_PW = 'Dd16012018'
    HOST = 'localhost'
    DB = 'test_db'
    TABLE_NAME = 'nivel1'
    NUM_ROWS = 1000

    engine_db_original = create_engine('mysql://{}:{}@{}:3306/{}'.format(USER, DB_PW, HOST, DB))
    engine_db_backup = create_engine('mysql://{}:{}@{}:3306/{}'.format(USER, DB_PW, HOST, "fake_db"))

    ids_list = [10092, 10095, 10106, 10127, 10133, 10137, 10138, 10140, 10147, 10159, 10164, 10167]
    '''ids_list = [10002, 10020, 10033, 10034, 10052, 10066, 10069, 10087, 10088, 10091,
    10092, 10095, 10106, 10127, 10133, 10137, 10138, 10140, 10147, 10159, 10164, 10167, 
    10189, 10199, 10200, 10290, 10297, 10303, 10306, 10311, 10316, 10327, 10328, 10334, 
    10343, 10344, 10350, 10352, 10364, 10367, 10369, 10377, 10384, 10390, 10396, 10401, 
    10417, 10425, 10450, 10461, 10468, 10473, 10525, 10538, 10548, 10553, 10554, 10576, 
    10605, 10606, 10617, 10636, 10639, 10664, 10669, 10675, 10686, 10689, 10697, 10700, 
    10702, 10724, 10730, 10738, 10767, 10768, 10776, 10783, 10792, 10795, 10802, 10806, 
    10811, 10818, 10824, 10837, 10841, 10850, 10861, 10862, 10876, 10877, 10887, 10911, 
    10945, 10950, 10957, 10962, 10966, 10974, 10988, 10991, 10996, 10997, 11000, 11004, 
    11028, 11032, 11038, 11053, 11054, 11057, 11063, 11067, 11076, 11079, 11083, 11112, 
    11125, 11133, 11147, 11156, 11159, 11165, 11193, 11194, 11198, 11200, 11207, 11208,
    11211, 11217, 11219, 11225, 11240, 11247, 11256, 11282, 11287, 11290, 11301, 11302, 
    11313, 11316, 11338, 11371, 11377, 11381, 11383, 11384, 11388, 11406, 11423, 11458, 
    11461, 11468, 11470, 11478, 11495, 11504, 11512, 11520, 11527, 11535, 11538, 11540, 
    11554, 11561, 11566, 11567, 11570, 11571, 11585, 11588, 11594, 11606, 11607, 11619, 
    11644, 11647, 11659, 11662, 11681, 11707, 11711, 11717, 11721, 11727, 11731, 11732, 
    11747, 11755, 11763, 11789, 11792, 11794, 11799, 11805, 11811, 11817, 11820, 11851, 
    11863, 11876, 11879, 11887, 11888, 11891, 11899, 11908, 11910, 11920, 11949, 11956, 
    11977, 11983, 12002, 12021, 12027, 12052, 12071, 12083, 12089, 12094, 12107, 12116, 
    12117, 12119, 12153, 12157, 12162, 12179, 12183, 12188, 12210, 12213, 12223, 12229, 
    12243, 12245, 12248, 12249, 12251, 12252, 12266, 12288, 12303, 12304, 12326, 12329, 
    12346, 12353, 12360, 12367, 12368, 12386, 12390, 12408, 12424, 12435, 12446, 12447, 
    12448, 12452, 12471, 12490, 12494, 12496, 12503, 12507, 12511, 12521, 12554, 12567, 
    12572, 12575, 12582, 12589, 12595, 12640, 12641, 12644, 12646, 12668, 12671, 12675, 
    12692, 12694, 12698, 12734, 12738, 12740, 12743, 12756, 12768, 12770, 12773, 12779, 
    12782, 12788, 12796, 12810, 12844, 12854, 12858, 12887, 12892, 12899, 12901, 12907, 
    12913, 12921, 12923, 12924, 12951, 12958, 12961, 12979, 12984, 12995, 12998, 13016, 
    13024, 13030, 13048, 13052, 13056, 13057, 13069, 13074, 13088, 13100, 13109, 13115, 
    13118, 13129, 13136, 13144, 13176, 13181, 13184, 13200, 13210, 13224, 13227, 13233, 
    13241, 13246, 13247, 13260, 13264, 13266, 13271, 13288, 13299, 13335, 13344, 13366, 
    13371, 13384, 13394, 13397, 13406, 13411, 13413, 13414, 13415, 13419, 13422, 13426, 
    13430, 13444, 13454, 13476, 13481, 13493, 13523, 13538, 13539, 13540, 13556, 13559, 
    13573, 13577, 13590, 13621, 13639, 13642, 13650, 13651, 13661, 13663, 13664, 13671, 
    13682, 13683, 13695, 13701, 13709, 13711, 13727, 13746, 13759, 13769, 13771, 13775, 
    13779, 13785, 13794, 13801, 13828, 13841, 13843, 13852, 13874, 13876, 13882, 13909, 
    13912, 13915, 13921, 13922, 13926, 13938, 13940, 13966, 13978, 13986, 13990, 13998, 
    14004, 14005, 14031, 14033, 14060, 14062, 14066, 14070, 14091, 14097, 14114, 14130, 
    14134, 14141, 14147, 14148, 14150, 14158, 14166, 14178, 14186, 14188, 14195, 14206, 
    14228, 14242, 14246, 14259, 14273, 14307, 14326, 14352, 14356, 14365, 14371, 14372, 
    14402, 14408, 14411, 14414, 14418, 14427, 14449, 14491, 14508, 14552, 14559, 14570, 
    14575, 14585, 14589, 14633, 14639, 14645, 14654, 14655, 14666, 14675, 14693, 14699, 
    14710, 14714, 14717, 14722, 14744, 14753, 14757, 14767, 14820, 14830, 14855, 14856, 
    14863, 14867, 14898, 14921, 14923, 14930, 14954, 14962, 14971, 14974, 14976, 14977, 
    14980, 14999, 15004, 15009, 15010, 15012, 15027, 15045, 15047, 15060, 15062, 15093, 
    15105, 15106, 15137, 15140, 15148, 15198, 15215, 15224, 15236, 15248, 15250, 15252, 
    15259, 15265, 15285, 15286, 15295, 15348, 15350, 15352, 15360, 15368, 15375, 15396, 
    15425, 15448, 15450, 15457, 15458, 15460, 15465, 15483, 15487, 15492, 15496, 15503, 
    15506, 15533, 15539, 15570, 15571, 15588, 15596, 15601, 15605, 15612, 15615, 15630, 
    15639, 15649, 15670, 15672, 15680, 15682, 15700, 15715, 15718, 15733, 15739, 15744, 
    15755, 15757, 15759, 15822, 15842, 15863, 15872, 15880, 15887, 15888, 15892, 15896, 
    15905, 15922, 15928, 15940, 15969, 15989, 16006, 16010, 16017, 16034, 16046, 16050, 
    16063, 16081, 16100, 16114, 16115, 16137, 16140, 16143, 16167, 16179, 16188, 16194, 
    16209, 16210, 16227, 16237, 16262, 16281, 16284, 16315, 16344, 16352, 16367, 16374, 
    16380, 16387, 16389, 16391, 16410, 16412, 16413, 16420, 16422, 16437, 16449, 16476, 
    16496, 16505, 16511, 16515, 16557, 16579, 16597, 16600, 16602, 16608, 16624, 16627, 
    16653, 16660, 16673, 16679, 16693, 16712, 16713, 16729, 16734, 16747, 16752, 16781, 
    16820, 16833, 16841, 16843, 16846, 16858, 16860, 16867, 16889, 16900, 16901, 16906, 
    16925, 16933, 16961, 16975, 17005, 17006, 17023, 17027, 17032, 17051, 17065, 17069, 
    17071, 17079, 17093, 17102, 17138, 17145, 17152, 17160, 17162, 17190, 17197, 17198, 
    17199, 17213, 17226, 17227, 17228, 17234, 17239, 17251, 17277, 17278, 17295, 17304, 
    17306, 17312, 17321, 17328, 17329, 17421, 17429, 17434, 17445, 17463, 17467, 17475, 
    17494, 17498, 17508, 17532, 17541, 17544, 17555, 17560, 17571, 17574, 17622, 17633, 
    17640, 17645, 17648, 17656, 17692, 17704, 17710, 17714, 17733, 17740, 17750, 17764, 
    17779, 17793, 17796, 17808, 17815, 17823, 17846, 17854, 17860, 17878, 17880, 17882, 
    17914, 17936, 17937, 17946, 17963, 17974, 17977, 17981, 17982, 17983, 17986, 18007, 
    18011, 18055, 18060, 18075, 18080, 18082, 18085, 18091, 18101, 18109, 18110, 18133, 
    18135, 18143, 18155, 18165, 18171, 18172, 18180, 18182, 18188, 18189, 18215, 18221, 
    18224, 18239, 18258, 18265, 18267, 18268, 18280, 18290, 18299, 18314, 18335, 18348, 
    18380, 18386, 18387, 18395, 18400, 18410, 18429, 18432, 18443, 18448, 18454, 18456, 
    18458, 18515, 18520, 18540, 18542, 18548, 18575, 18590, 18598, 18613, 18629, 18641, 
    18653, 18656, 18660, 18661, 18717, 18724, 18729, 18731, 18737, 18747, 18755, 18756, 
    18771, 18773, 18774, 18775, 18807, 18820, 18838, 18848, 18861, 18876, 18879, 18902, 
    18913, 18921, 18931, 18938, 18942, 18951, 18980, 19005, 19027, 19034, 19044, 19072, 
    19080, 19084, 19091, 19099, 19107, 19108, 19110, 19114, 19115, 19125, 19133, 19167, 
    19194, 19198, 19200, 19214, 19231, 19237, 19257, 19287, 19291, 19304, 19334, 19335, 
    19348, 19351, 19367, 19395, 19405, 19408, 19411, 19432, 19437, 19453, 19472, 19481, 
    19483, 19486, 19493, 19494, 19507, 19520, 19536, 19542, 19545, 19558, 19567, 19583, 
    19584, 19585, 19592, 19602, 19609, 19631, 19643, 19648, 19650, 19655, 19663, 19677, 
    19678, 19689, 19701, 19711, 19736, 19747, 19810, 19815, 19820, 19825, 19826, 19838, 
    19850, 19871, 19873, 19884, 19923, 19925, 19927, 19932, 19957, 19970, 19971, 19980]'''

    '''
    # Generate ids Lis
    min_lim_ids = 10000
    max_lim_ids = 20000

    for _ in range(1, NUM_ROWS):
        ids_list.append(random.randint(min_lim_ids, max_lim_ids))

    ids_set = set(ids_list)

    ids_list = list(ids_set)

    ids_list = sorted(ids_list)
    '''

    # Insert fake data
    seed = 150
    insert_data(engine_db=engine_db_original, table_name=TABLE_NAME, ids_list=ids_list, seed=seed)
    insert_data(engine_db=engine_db_backup, table_name=TABLE_NAME, ids_list=ids_list, seed=seed)

    # Finished
    print('FIM')